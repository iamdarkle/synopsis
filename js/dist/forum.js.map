{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@ianm/synopsis/webpack/bootstrap","webpack://@ianm/synopsis/webpack/runtime/compat get default export","webpack://@ianm/synopsis/webpack/runtime/define property getters","webpack://@ianm/synopsis/webpack/runtime/hasOwnProperty shorthand","webpack://@ianm/synopsis/webpack/runtime/make namespace object","webpack://@ianm/synopsis/external root \"flarum.core.compat['forum/app']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/extend']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/utils/string']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['tags/models/Tag']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/Model']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@ianm/synopsis/./src/forum/index.ts","webpack://@ianm/synopsis/./src/forum/addSummaryExcerpt.tsx","webpack://@ianm/synopsis/./src/forum/addUserPreference.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/string'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/models/Tag'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/forum/app';\n\nimport addSummaryExcerpt from './addSummaryExcerpt';\nimport addUserPreference from './addUserPreference';\n\napp.initializers.add('ianm-synopsis', () => {\n  addSummaryExcerpt();\n  addUserPreference();\n});\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport { truncate } from 'flarum/common/utils/string';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Tag from 'flarum/tags/models/Tag';\nimport Model from 'flarum/common/Model';\nimport { getPlainContent } from './util/getPlainContent';\n\nexport default function addSummaryExcerpt() {\n  if (app.initializers.has('flarum-tags')) {\n    Tag.prototype.richExcerpts = Model.attribute('richExcerpts');\n    Tag.prototype.excerptLength = Model.attribute('excerptLength');\n  }\n\n  extend(DiscussionListState.prototype, 'requestParams', function (params: any) {\n    if (app.forum.attribute('synopsis.excerpt_type') === 'first') params.include.push('firstPost');\n    else params.include.push('lastPost');\n  });\n\n  extend(DiscussionListItem.prototype, 'infoItems', function (items: ItemList) {\n    const discussion = this.attrs.discussion;\n\n    if (app.session.user && !app.session.user.preferences().showSynopsisExcerpts) {\n      return;\n    }\n\n    const tags = discussion.tags();\n    let tag;\n    if (tags) {\n      tag = tags[tags.length - 1];\n    }\n\n    const excerptPost = app.forum.attribute('synopsis.excerpt_type') === 'first' ? discussion.firstPost() : discussion.lastPost();\n    const excerptLength = typeof tag?.excerptLength() === 'number' ? tag?.excerptLength() : app.forum.attribute('synopsis.excerpt_length');\n    const richExcerpt = typeof tag?.richExcerpts() === 'number' ? tag?.richExcerpts() : app.forum.attribute('synopsis.rich_excerpts');\n    const onMobile = app.session.user ? app.session.user.preferences().showSynopsisExcerptsOnMobile : false;\n\n    // A length of zero means we don't want a synopsis for this discussion, so do nothing.\n    if (excerptLength === 0) {\n      return;\n    }\n\n    if (!excerptPost?.contentHtml?.()) return;\n    const content = richExcerpt ? m.trust(truncate(excerptPost.contentHtml(), excerptLength)) : truncate(excerptPost.contentPlain(), excerptLength);\n\n    if (excerptPost) {\n      const excerpt = <div>{content}</div>;\n\n      items.add(onMobile ? 'excerptM' : 'excerpt', excerpt, -100);\n    }\n  });\n}\n","import type * as Mithril from 'mithril';\nimport app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Switch from 'flarum/common/components/Switch';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default function () {\n  extend(SettingsPage.prototype, 'oninit', function () {\n    this.showSynopsisExcerpts = Stream(this.user.preferences().showSynopsisExcerpts);\n    this.showSynopsisExcerptsOnMobile = Stream(this.user.preferences().showSynopsisExcerptsOnMobile);\n  });\n\n  extend(SettingsPage.prototype, 'settingsItems', function (items: ItemList) {\n    items.add(\n      'synopsis',\n      FieldSet.component(\n        {\n          label: app.translator.trans('ianm-synopsis.forum.user.settings.summaries-heading'),\n          className: 'Settings-Synopsis',\n        },\n        this.summariesItems().toArray()\n      )\n    );\n  });\n\n  SettingsPage.prototype['summariesItems'] = function () {\n    const items = new ItemList();\n\n    items.add(\n      'synopsis-excerpts',\n      Switch.component(\n        {\n          state: this.user.preferences().showSynopsisExcerpts,\n          onchange: (value) => {\n            this.showSynopsisExcerptsLoading = true;\n\n            this.user.savePreferences({ showSynopsisExcerpts: value }).then(() => {\n              this.showSynopsisExcerptsLoading = false;\n              m.redraw();\n            });\n          },\n          loading: this.showSynopsisExcerptsLoading,\n        },\n        app.translator.trans('ianm-synopsis.forum.user.settings.show-summaries')\n      )\n    );\n\n    if (this.user.preferences().showSynopsisExcerpts) {\n      items.add(\n        'synopsis-excerpts-mobile',\n        Switch.component(\n          {\n            state: this.user.preferences().showSynopsisExcerptsOnMobile,\n            disabled: !this.user.preferences().showSynopsisExcerpts,\n            onchange: (value) => {\n              this.showSynopsisExcerptsOnMobileLoading = true;\n\n              this.user.savePreferences({ showSynopsisExcerptsOnMobile: value }).then(() => {\n                this.showSynopsisExcerptsOnMobileLoading = false;\n                window.location.reload();\n              });\n            },\n            loading: this.showSynopsisExcerptsOnMobileLoading,\n          },\n          app.translator.trans('ianm-synopsis.forum.user.settings.show-summaries-mobile')\n        )\n      );\n    }\n\n    return items;\n  };\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","Tag","Model","extend","DiscussionListState","params","include","push","DiscussionListItem","items","discussion","this","attrs","showSynopsisExcerpts","tag","tags","length","excerptPost","firstPost","lastPost","excerptLength","richExcerpt","richExcerpts","onMobile","showSynopsisExcerptsOnMobile","contentHtml","content","m","trust","truncate","contentPlain","excerpt","add","SettingsPage","Stream","user","preferences","FieldSet","label","className","summariesItems","toArray","ItemList","Switch","state","onchange","showSynopsisExcerptsLoading","savePreferences","then","redraw","loading","disabled","showSynopsisExcerptsOnMobileLoading","window","location","reload"],"sourceRoot":""}